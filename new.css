html{
    background-color:black;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
  }

  @property --test { /* created custom property call test */
    syntax: "<angle>";/* rotatation behind the calc-body*/
    initial-value: 0deg;/* default value of this custom property */
    inherits: false; /* do not inherit values from parent cont */
  }
  
  :root {  /* colours */
    --clr-3: #180adf;
    --clr-4: #df1a55;
    --clr-5: #5a30bd;
  }

  .calc-body{
    height: 35vh;
    aspect-ratio: 1/1.5;
    background-color: black;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    position: relative; /*keeps blurr behind*/
    justify-content: stretch;
  }

  .calc-body::before,
  .calc-body::after{
    content: ''; /* border and animation dissapers without this */
    position: absolute; /* positions the pseudo element behind parent element*/
    inset: -0.25rem;/* sets the size of the pseudo elemnt the smaller number the bigger*/
    z-index: -1; /* sends pseudo elm behind parent*/
    background: conic-gradient( /* calls the --test var and runs it from the initial value of the var (center). by default it runs from center. Might learn this in css advance */
    from var(--test),
    var(--clr-3),
    var(--clr-4),
    var(--clr-5),
    var(--clr-4),
    var(--clr-3)
    );
    border-radius: inherit; /* inherit the border radius of parent element*/
    animation: rotation 5s linear infinite;
  }
  
  .calc-body::after {
    filter: blur(0.8rem); /*changes the blur and smoothness of animation*/
  }
  
  @keyframes rotation {
    0% {
    --test: 0deg;
    }
  
    100% {
    --test: 360deg;
    }
  }

  .display-cont{
    height: 60%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  .display {
    border-radius: 10px 10px 0 0;
    width: 90%;
    height: 40%;
    color: white;
    background-color: rgb(27, 25, 25);
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    font-size: 20px;
    font-family: monospace;
  }

  .result {
    background-color: rgb(27, 25, 25);
    height: 40%;
    width: 90%;
    color: white;
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    font-size: 40px;
    font-family: monospace;
    border-radius: 0 0 10px 10px;
  }


  .buttons-cont{
    height: 100%;
    display: flex;
    flex-wrap: wrap;
    justify-content: stretch;
    align-content: stretch;

  }
  
  button{
    width: 25%;
    background-color: black;
    border: none;
    color: white;
  }

  .operator  {
    border-end-end-radius: 20px;
  }
  .clear {
    border-bottom-left-radius: 20px;
  }
  .clear:hover{
    background-color: rgb(180, 26, 26);
  }
  